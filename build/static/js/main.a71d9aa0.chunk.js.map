{"version":3,"sources":["components/InnerSVG/InnerSVG.js","components/Location/Location.js","components/PopUp/PopUp.js","App.js","reportWebVitals.js","index.js"],"names":["InnerSVG","props","width","height","x","y","id","onMouseEnter","showPlanetInfo","onMouseLeave","hidePlanetInfo","fill","stroke","className","residents","Packer","w","h","this","init","prototype","root","fit","blocks","i","childRoot","block","length","findChildRoot","splitChildRoot","used","right","down","Location","state","document","documentElement","clientWidth","clientHeight","planetRenderFull","updateDimensions","setState","rate","numOfPlanets","planets","areaPerResident","map","planet","itemSize","Math","floor","sqrt","window","addEventListener","planetsList","sort","a","b","allResidents","reduce","total","item","planetRender","setPlanetSize","removeEventListener","React","Component","PopUpContainer","styled","div","PopUp","horPosition","planetId","pageX","pageY","filter","popupPosition","top","left","style","name","type","dimension","App","bind","axios","get","then","res","data","results","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a71d9aa0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst InnerSVG = (props) => {\r\n  \r\n  return (\r\n    <svg    \r\n      width={props.width}\r\n      height={props.height}\r\n      x={props.x}\r\n      y={props.y}        \r\n    >\r\n      <rect \r\n        id={props.id} \r\n        onMouseEnter={props.showPlanetInfo}\r\n        onMouseLeave={props.hidePlanetInfo}  \r\n        width=\"100%\" \r\n        height=\"100%\" \r\n        fill=\"white\" \r\n        stroke=\"grey\" \r\n      />\r\n      <text x=\"5\" y=\"15\" width=\"30px\" height=\"10px\" className=\"svgText\">{props.residents}</text>\r\n\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default InnerSVG;","import React from 'react';\r\nimport InnerSVG from '../InnerSVG/InnerSVG';\r\n\r\nconst Packer = function(w, h) { \r\n  this.init(w, h);\r\n};\r\n\r\nPacker.prototype = {\r\n\r\n  init: function(w, h) {\r\n    this.root = { x: 0, y: 0, w: w, h: h };\r\n  },\r\n\r\n  fit: function(blocks) {\r\n\r\n    let i, childRoot, block;\r\n    for (i = 0; i < blocks.length; i++) {\r\n      block = blocks[i];      \r\n      if ((childRoot = this.findChildRoot(this.root, block.w, block.h))){\r\n        block.fit = this.splitChildRoot(childRoot, block.w, block.h);\r\n      }\r\n    }\r\n  },\r\n\r\n  findChildRoot: function(root, w, h) {   \r\n    if (root.used)\r\n      return this.findChildRoot(root.right, w, h) || this.findChildRoot(root.down, w, h);\r\n    else if ((w <= root.w) && (h <= root.h))\r\n      return root;\r\n    else\r\n      return  null;\r\n  },\r\n\r\n  splitChildRoot: function(childRoot, w, h) {\r\n    childRoot.used = true;\r\n    childRoot.down  = { x: childRoot.x,     y: childRoot.y + h, w: childRoot.w,     h: childRoot.h - h };\r\n    childRoot.right = { x: childRoot.x + w, y: childRoot.y,     w: childRoot.w - w, h: h          };\r\n    return childRoot;\r\n  }\r\n}\r\n\r\n\r\nexport default class Location extends React.Component {\r\n  state = { \r\n    width: document.documentElement.clientWidth, \r\n    height: document.documentElement.clientHeight,\r\n    planetRenderFull: []\r\n  };\r\n\r\n  setPlanetSize(planets, areaPerResident) {\r\n    return planets.map(planet => { //создаем объект из планет\r\n      let itemSize;\r\n      planet.residents.length > 5\r\n        ? itemSize = Math.floor(Math.sqrt(planet.residents.length * areaPerResident))\r\n        : itemSize = 20;\r\n\r\n      return (\r\n        {\r\n          id: planet.id,\r\n          residents: planet.residents.length,\r\n          w: itemSize,\r\n          h: itemSize,\r\n        }\r\n      )\r\n    })\r\n  }\r\n  \r\n  componentDidMount() {    \r\n    window.addEventListener('resize', this.updateDimensions);\r\n    const planets = this.props.planetsList.sort((a, b) => b.residents.length - a.residents.length); //сортируем планеты от макс к мин по количеству жителей\r\n    const allResidents = planets.map(planet => planet.residents.length).reduce((total, item) => total + item);\r\n    const areaPerResident = Math.floor( (this.state.width * this.state.height) / allResidents - 1500);\r\n\r\n    const planetRender = this.setPlanetSize(planets, areaPerResident);    \r\n    const packer = new Packer(this.state.width, this.state.height);\r\n    packer.fit(planetRender, areaPerResident);\r\n\r\n    this.setState({\r\n      planetRenderFull: planetRender.map(planet => ({\r\n        ...planet,\r\n        x: planet.fit ? planet.fit.x : 0,\r\n        y: planet.fit ? planet.fit.y : 0,\r\n      }))\r\n    });\r\n  }\r\n\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateDimensions);\r\n  }\r\n\r\n  updateDimensions = () => {    \r\n    this.setState({ \r\n      width: document.documentElement.clientWidth, \r\n      height: document.documentElement.clientHeight,\r\n      rate: (document.documentElement.clientWidth * document.documentElement.clientHeight) / this.numOfPlanets\r\n    });\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <svg width={this.state.width} height={this.state.height}>\r\n        {this.state.planetRenderFull.length > 0 && this.state.planetRenderFull.map(planet => \r\n          <InnerSVG\r\n            showPlanetInfo={this.props.showPlanetInfo}\r\n            hidePlanetInfo={this.props.hidePlanetInfo}\r\n            planetsList={this.props.planetsList}\r\n            key={planet.id}\r\n            id={planet.id}\r\n            residents={planet.residents}\r\n            width={planet.w} \r\n            height={planet.h}\r\n            x={planet.x}\r\n            y={planet.y}\r\n          />\r\n        )}\r\n      </svg>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst PopUpContainer = styled.div`\r\nbox-sizing: border-box;\r\nwidth: 380px;\r\nheight: 200px;\r\nposition: absolute;\r\nbackground-color: #FFFFFF;\r\nborder-radius: 5px;\r\npadding: 20px 40px 40px;\r\nbox-shadow: 0px 20px 40px rgba(0, 0, 0, 0.3);\r\nz-index: 99;\r\npointer-events: none;\r\n`;\r\n\r\nconst PopUp = ({state: {planetsList, planetId, pageX, pageY}}) => {\r\n \r\n  const planet = planetsList.filter(planet => planet.id === +planetId)\r\n\r\n  const pageW = document.documentElement.clientWidth;\r\n  const pageH = document.documentElement.clientHeight;\r\n  let horPosition, vertPosition;\r\n\r\n  if (pageW - (pageX + 400) > 0) {\r\n    horPosition = pageX + 20;\r\n  } else {\r\n    horPosition = pageX - 400;\r\n  }\r\n\r\n  if (pageH - (pageY + 220) > 0) {\r\n    vertPosition = pageY + 20;\r\n  } else {\r\n    vertPosition = pageY - 220;\r\n  }\r\n\r\n  const popupPosition = {\r\n    top: vertPosition,\r\n    left: horPosition,\r\n  }  \r\n\r\n  return (\r\n      <PopUpContainer style={popupPosition}>\r\n        <h2>{planet[0].name}</h2>\r\n        <p><b>Type:</b> {planet[0].type}</p>\r\n        <p><b>Dimension:</b> {planet[0].dimension}</p>\r\n        <p><b>Residents:</b> {planet[0].residents.length}</p>\r\n      </PopUpContainer>      \r\n  )\r\n\r\n}\r\n\r\nexport default PopUp;","import React from 'react';\nimport axios from 'axios';\nimport Location from './components/Location/Location';\nimport PopUp from './components/PopUp/PopUp';\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.showPlanetInfo = this.showPlanetInfo.bind(this);\n    this.hidePlanetInfo = this.hidePlanetInfo.bind(this);\n  } \n\n  state = {\n    planetsList: [],\n    showPlanetInfo: false,\n    planetId: \"\",\n    pageX: \"\",\n    pageY: \"\",\n  }\n\n  componentDidMount() {\n      axios.get(`https://rickandmortyapi.com/api/location`)\n        .then(res => {\n          const data = res.data.results\n          this.setState({ planetsList: data });\n        })\n  }\n\n  showPlanetInfo(e) {\n    \n    this.setState({\n      showPlanetInfo: true,\n      planetId: e.target.id,\n      pageX: e.pageX,\n      pageY: e.pageY\n    });\n  }\n\n  hidePlanetInfo(e) {\n    this.setState({\n      showPlanetInfo: false,\n      planetId: e.target.id\n    });\n  }\n\n  render() {\n    return (      \n      <div className=\"mainContainer\">\n        {this.state.showPlanetInfo && <PopUp state={this.state} />}\n        {this.state.planetsList.length > 0 \n          ? <Location \n            planetsList={this.state.planetsList} \n            showPlanetInfo={this.showPlanetInfo} \n            hidePlanetInfo={this.hidePlanetInfo}/> \n          : 'Loading...'}        \n      </div>      \n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}